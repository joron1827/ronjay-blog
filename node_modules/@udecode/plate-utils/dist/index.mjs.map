{"version":3,"sources":["../src/lib/defaultsDeepToNodes.ts","../src/lib/isType.ts","../src/lib/moveSelectionByOffset.ts"],"sourcesContent":["import type { ApplyDeepToNodesOptions } from '@udecode/plate-core';\nimport type { TNode } from '@udecode/slate';\n\nimport { applyDeepToNodes } from '@udecode/plate-core';\nimport defaults from 'lodash/defaults.js';\n\n/** Recursively merge a source object to children nodes with a query. */\nexport const defaultsDeepToNodes = <N extends TNode>(\n  options: Omit<ApplyDeepToNodesOptions<N>, 'apply'>\n) => {\n  applyDeepToNodes({ ...options, apply: defaults });\n};\n","import type { SlateEditor } from '@udecode/plate-core';\n\nimport castArray from 'lodash/castArray.js';\n\n/** Does the node match the type provided. */\nexport const isType = (\n  editor: SlateEditor,\n  node: any,\n  key?: string[] | string\n) => {\n  const keys = castArray(key);\n  const types: string[] = [];\n\n  keys.forEach((_key) => types.push(editor.getType({ key: _key })));\n\n  return types.includes(node?.type);\n};\n","import { type SlateEditor, isHotkey } from '@udecode/plate-core';\nimport { moveSelection } from '@udecode/slate';\nimport { Range } from 'slate';\n\nexport interface MoveSelectionByOffsetOptions {\n  query?: (editor: SlateEditor) => boolean;\n}\n\nexport const moveSelectionByOffset = (\n  editor: SlateEditor,\n  {\n    event,\n    query = () => true,\n  }: {\n    event: KeyboardEvent;\n  } & MoveSelectionByOffsetOptions\n) => {\n  const { selection } = editor;\n\n  if (!selection || Range.isExpanded(selection) || !query(editor)) {\n    return false;\n  }\n  if (isHotkey('left', event)) {\n    event.preventDefault();\n    moveSelection(editor, { reverse: true, unit: 'offset' });\n\n    return true;\n  }\n  if (isHotkey('right', event)) {\n    event.preventDefault();\n    moveSelection(editor, { unit: 'offset' });\n\n    return true;\n  }\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA,SAAS,wBAAwB;AACjC,OAAO,cAAc;AAGd,IAAM,sBAAsB,CACjC,YACG;AACH,mBAAiB,iCAAK,UAAL,EAAc,OAAO,SAAS,EAAC;AAClD;;;ACTA,OAAO,eAAe;AAGf,IAAM,SAAS,CACpB,QACA,MACA,QACG;AACH,QAAM,OAAO,UAAU,GAAG;AAC1B,QAAM,QAAkB,CAAC;AAEzB,OAAK,QAAQ,CAAC,SAAS,MAAM,KAAK,OAAO,QAAQ,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;AAEhE,SAAO,MAAM,SAAS,6BAAM,IAAI;AAClC;;;AChBA,SAA2B,gBAAgB;AAC3C,SAAS,qBAAqB;AAC9B,SAAS,aAAa;AAMf,IAAM,wBAAwB,CACnC,QACA;AAAA,EACE;AAAA,EACA,QAAQ,MAAM;AAChB,MAGG;AACH,QAAM,EAAE,UAAU,IAAI;AAEtB,MAAI,CAAC,aAAa,MAAM,WAAW,SAAS,KAAK,CAAC,MAAM,MAAM,GAAG;AAC/D,WAAO;AAAA,EACT;AACA,MAAI,SAAS,QAAQ,KAAK,GAAG;AAC3B,UAAM,eAAe;AACrB,kBAAc,QAAQ,EAAE,SAAS,MAAM,MAAM,SAAS,CAAC;AAEvD,WAAO;AAAA,EACT;AACA,MAAI,SAAS,SAAS,KAAK,GAAG;AAC5B,UAAM,eAAe;AACrB,kBAAc,QAAQ,EAAE,MAAM,SAAS,CAAC;AAExC,WAAO;AAAA,EACT;AACF;","names":[]}