{"version":3,"sources":["../../src/react/PlateElement.tsx","../../src/react/PlateLeaf.tsx","../../src/react/createNodeHOC.tsx","../../src/react/createNodesHOC.tsx","../../src/react/selectEditor.ts","../../src/react/useFormInputProps.ts","../../src/react/useMarkToolbarButton.ts","../../src/react/usePlaceholder.ts","../../src/react/useRemoveNodeButton.ts"],"sourcesContent":["import React from 'react';\n\nimport type { TElement } from '@udecode/slate';\n\nimport {\n  type AnyPlatePlugin,\n  type PlateRenderElementProps,\n  omitPluginContext,\n} from '@udecode/plate-core/react';\nimport { type BoxProps, Box, useComposedRef } from '@udecode/react-utils';\nimport { clsx } from 'clsx';\n\nexport type PlateElementProps<\n  N extends TElement = TElement,\n  P extends AnyPlatePlugin = AnyPlatePlugin,\n> = {\n  /** Get HTML attributes from Slate element. Alternative to `PlatePlugin.props`. */\n  elementToAttributes?: (element: N) => any;\n} & BoxProps &\n  PlateRenderElementProps<N, P>;\n\nexport const usePlateElement = (props: PlateElementProps) => {\n  const { attributes, element, elementToAttributes, nodeProps, ...rootProps } =\n    omitPluginContext(props);\n\n  return {\n    props: {\n      ...attributes,\n      ...rootProps,\n      ...nodeProps,\n      ...elementToAttributes?.(element),\n      className: clsx(props.className, nodeProps?.className),\n    },\n    ref: useComposedRef(props.ref, attributes.ref),\n  };\n};\n\n/** Headless element component. */\nconst PlateElement = React.forwardRef<HTMLDivElement, PlateElementProps>(\n  (props: PlateElementProps, ref) => {\n    const { props: rootProps, ref: rootRef } = usePlateElement({\n      ...props,\n      ref,\n    });\n\n    return <Box {...rootProps} ref={rootRef} />;\n  }\n) as (<\n  N extends TElement = TElement,\n  P extends AnyPlatePlugin = AnyPlatePlugin,\n>(\n  props: PlateElementProps<N, P> & React.RefAttributes<HTMLDivElement>\n) => React.ReactElement) & { displayName?: string };\nPlateElement.displayName = 'PlateElement';\n\nexport { PlateElement };\n","import React from 'react';\n\nimport type { TText } from '@udecode/slate';\n\nimport {\n  type AnyPlatePlugin,\n  type PlateRenderLeafProps,\n  omitPluginContext,\n} from '@udecode/plate-core/react';\nimport { type TextProps, Text, useComposedRef } from '@udecode/react-utils';\nimport { clsx } from 'clsx';\n\nexport type PlateLeafProps<\n  T extends TText = TText,\n  P extends AnyPlatePlugin = AnyPlatePlugin,\n> = {\n  /** Get HTML attributes from Slate leaf. Alternative to `PlatePlugin.props`. */\n  leafToAttributes?: (leaf: T) => any;\n} & PlateRenderLeafProps<T, P> &\n  TextProps;\n\nexport const usePlateLeaf = (props: PlateLeafProps) => {\n  const { attributes, leaf, leafToAttributes, nodeProps, text, ...rootProps } =\n    omitPluginContext(props);\n\n  return {\n    props: {\n      ...attributes,\n      ...rootProps,\n      ...nodeProps,\n      ...leafToAttributes?.(leaf),\n      className: clsx(props.className, nodeProps?.className),\n    },\n    ref: useComposedRef(props.ref, (attributes as any).ref),\n  };\n};\n\n/** Headless leaf component. */\nconst PlateLeaf = React.forwardRef<HTMLSpanElement, PlateLeafProps>(\n  (props: PlateLeafProps, ref) => {\n    const { props: rootProps, ref: rootRef } = usePlateLeaf({ ...props, ref });\n\n    return <Text {...rootProps} ref={rootRef} />;\n  }\n) as (<N extends TText = TText, P extends AnyPlatePlugin = AnyPlatePlugin>({\n  className,\n  ...props\n}: PlateLeafProps<N, P> &\n  React.RefAttributes<HTMLSpanElement>) => React.ReactElement) & {\n  displayName?: string;\n};\nPlateLeaf.displayName = 'PlateLeaf';\n\nexport { PlateLeaf };\n","import React from 'react';\n\nimport type { PlateRenderElementProps } from '@udecode/plate-core/react';\n\nexport const createNodeHOC =\n  <T,>(HOC: React.FC<T>) =>\n  (Component: any, props: Omit<T, keyof PlateRenderElementProps>) =>\n    function hoc(childrenProps: PlateRenderElementProps) {\n      return (\n        <HOC {...({ ...childrenProps, ...props } as T)}>\n          <Component {...childrenProps} />\n        </HOC>\n      );\n    };\n","import type { AnyObject } from '@udecode/utils';\n\nimport castArray from 'lodash/castArray.js';\nimport merge from 'lodash/merge.js';\n\nimport { createNodeHOC } from './createNodeHOC';\n\nexport type CreateHOCOptions<T> = {\n  /** Set HOC by key. */\n  key?: string;\n\n  /** Set HOC by key. */\n  keys?: string[];\n} & AnyObject &\n  Partial<T>;\n\nconst createHOC = <T,>(withHOC: any) => {\n  return (\n    components: any,\n    options: CreateHOCOptions<T> | CreateHOCOptions<T>[]\n  ) => {\n    const _components = { ...components };\n    const optionsByKey: any = {};\n\n    const optionsList = castArray<CreateHOCOptions<T>>(options);\n\n    optionsList.forEach(({ key, keys, ...opt }) => {\n      const _keys: string[] = key ? [key] : (keys ?? Object.keys(_components));\n\n      _keys.forEach((_key) => {\n        optionsByKey[_key] = merge(optionsByKey[_key], opt);\n      });\n    });\n\n    Object.keys(optionsByKey).forEach((key) => {\n      if (!_components[key]) return;\n\n      _components[key] = withHOC(_components[key], optionsByKey[key]);\n    });\n\n    return _components;\n  };\n};\n\n/** Create components HOC by plugin key. */\nexport const createNodesHOC = <T,>(HOC: React.FC<T>) => {\n  return createHOC<T>(createNodeHOC(HOC));\n};\n\n/** Create components HOC by plugin key with a custom HOC. */\nexport const createNodesWithHOC = <T,>(\n  withHOC: (component: any, props: T) => any\n) => {\n  return createHOC<T>(withHOC);\n};\n","import type { Location } from 'slate';\n\nimport {\n  type TEditor,\n  getEndPoint,\n  getStartPoint,\n  select,\n} from '@udecode/slate';\nimport { focusEditor } from '@udecode/slate-react';\n\nexport interface SelectEditorOptions {\n  /** Specific location if edge is not defined. */\n  at?: Location;\n\n  /** Start or end of the editor. */\n  edge?: 'end' | 'start';\n\n  /** If true, focus the React editor before selecting. */\n  focus?: boolean;\n}\n\n/** Select an editor at a target or an edge (start, end). */\nexport const selectEditor = (\n  editor: TEditor,\n  { at, edge, focus }: SelectEditorOptions\n) => {\n  if (focus) {\n    focusEditor(editor);\n  }\n\n  let location = at as Location;\n\n  if (edge === 'start') {\n    location = getStartPoint(editor, []);\n  }\n  if (edge === 'end') {\n    location = getEndPoint(editor, []);\n  }\n  if (location) {\n    select(editor, location);\n  }\n};\n","interface InputProps {\n  /**\n   * Should we activate the onKeyDownCapture handler to preventDefault when the\n   * user presses enter?\n   */\n  preventDefaultOnEnterKeydown?: boolean;\n}\n\n/**\n * Hook to allow the user to spread a set of predefined props to the Div wrapper\n * of an Input element\n *\n * @param param0 An options object which can be expanded to add further\n *   functionality\n * @returns A props object which can be spread onto the element\n */\nexport const useFormInputProps = (options?: InputProps) => {\n  // Nothing provided to just return an empty object which can still be spread.\n  // If we need to add more functionality later we will still be able to do so\n  if (!options) return { props: {} };\n\n  // Destructure our options so we can use them\n  const { preventDefaultOnEnterKeydown } = options;\n\n  /**\n   * Handle the keydown capture event and prevent the default behaviour when the\n   * user presses enter.\n   *\n   * In the event the user presses enter on a field such as a link, prior to\n   * filling in both label and url, the default behaviour is to submit the form.\n   * This, ultimately, results in no link being added as you need to fill both\n   * fields to pass validation.\n   *\n   * By calling preventDefault we short circuit the form's submission thus\n   * allowing the user to continue filling in the other fields\n   *\n   * @param e The original event which was provided by the VDOM implement their\n   *   own behaviour on this event\n   */\n  const handleEnterKeydownCapture = (\n    e: React.KeyboardEvent<HTMLDivElement>\n  ) => {\n    // Prevent the form from submitting\n    if (e.key === 'Enter' || e.keyCode === 13) {\n      e.preventDefault();\n    }\n  };\n\n  return {\n    props: {\n      onKeyDownCapture: preventDefaultOnEnterKeydown\n        ? (e: React.KeyboardEvent<HTMLDivElement>) =>\n            handleEnterKeydownCapture(e)\n        : undefined,\n    },\n  };\n};\n","import { useEditorRef, useEditorSelector } from '@udecode/plate-core/react';\nimport { isMarkActive } from '@udecode/slate-utils';\n\nexport const useMarkToolbarButtonState = ({\n  clear,\n  nodeType,\n}: {\n  nodeType: string;\n  clear?: string[] | string;\n}) => {\n  const pressed = useEditorSelector(\n    (editor) => isMarkActive(editor, nodeType),\n    [nodeType]\n  );\n\n  return {\n    clear,\n    nodeType,\n    pressed,\n  };\n};\n\nexport const useMarkToolbarButton = (\n  state: ReturnType<typeof useMarkToolbarButtonState>\n) => {\n  const editor = useEditorRef();\n\n  return {\n    props: {\n      pressed: state.pressed,\n      onClick: () => {\n        editor.tf.toggle.mark({ key: state.nodeType, clear: state.clear });\n      },\n      onMouseDown: (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n      },\n    },\n  };\n};\n","import { useEditorRef } from '@udecode/plate-core/react';\nimport {\n  type QueryNodeOptions,\n  isCollapsed,\n  isElementEmpty,\n  queryNode,\n} from '@udecode/slate';\nimport { findNodePath } from '@udecode/slate-react';\nimport { useComposing, useFocused, useSelected } from 'slate-react';\n\nimport type { PlateElementProps } from './PlateElement';\n\nexport interface PlaceholderProps extends PlateElementProps {\n  placeholder: string;\n  hideOnBlur?: boolean;\n  query?: QueryNodeOptions;\n}\n\nexport const usePlaceholderState = ({\n  element,\n  hideOnBlur = true,\n  query,\n}: PlaceholderProps) => {\n  const focused = useFocused();\n  const selected = useSelected();\n  const composing = useComposing();\n  const editor = useEditorRef();\n\n  const isEmptyBlock = isElementEmpty(editor, element) && !composing;\n\n  const enabled =\n    isEmptyBlock &&\n    (!query || queryNode([element, findNodePath(editor, element)!], query)) &&\n    (!hideOnBlur ||\n      (isCollapsed(editor.selection) && hideOnBlur && focused && selected));\n\n  return {\n    enabled,\n  };\n};\n","import { useEditorRef } from '@udecode/plate-core/react';\nimport { type TElement, removeNodes } from '@udecode/slate';\nimport { findNodePath } from '@udecode/slate-react';\n\nexport const useRemoveNodeButton = ({ element }: { element: TElement }) => {\n  const editor = useEditorRef();\n\n  return {\n    props: {\n      onClick: () => {\n        const path = findNodePath(editor, element);\n\n        removeNodes(editor, { at: path });\n      },\n      onMouseDown: (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n      },\n    },\n  };\n};\n"],"mappings":"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","names":["React","omitPluginContext","useComposedRef","clsx","omitPluginContext","clsx","useComposedRef","React","React","React","useEditorRef","useEditorRef","findNodePath"]}