---
// MainBanner.astro
const stacks = ['AWS', 'Docker', 'Kubernetes', 'DevOps']
---

<section class="main-banner">
  <div class="intro-wrapper">
    <div class="title">
      안녕하세요!
      <br />
      <strong><span class="rotating-text" data-texts={JSON.stringify(stacks)}>AWS</span></strong>를 좋아하는
      <br />
      데브옵스 엔지니어 <strong>조성찬</strong>입니다.
    </div>
  </div>
</section>

<style>
  .main-banner {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 100%;
    margin: 60px 0 130px 0;
    font-family: inherit;
  }

  .intro-wrapper {
    white-space: nowrap;
    display: flex;
    justify-content: center;
    position: relative;
    font-size: 40px;
    line-height: 1.2;
  }

  .title {
    width: 100%;
    text-align: center;
  }

  .title strong {
    display: inline-block;
    font-weight: 600;
  }

  .rotating-text {
    position: relative;
    display: inline;
  }

  .rotating-text::after {
    content: '|';
    animation: blink 0.8s cubic-bezier(0.68, 0.01, 0.01, 0.99) infinite;
    margin-left: 2px;
    opacity: 1;
  }

  .rotating-text.typing::after {
    animation: none;
    opacity: 1;
  }

  .rotating-text.deleting::after {
    animation: none;
    opacity: 1;
  }

  @keyframes blink {
    0%, 100% { opacity: 0; }
    50% { opacity: 1; }
  }

  @media (max-width: 768px) {
    .main-banner {
      margin: 40px 0 100px 0;
      padding: 0 10px;
    }

    .intro-wrapper {
      font-size: 27px;
    }
  }
</style>

<script>
  // Typing effect for rotating text
  const rotatingText = document.querySelector('.rotating-text') as HTMLElement;
  
  if (rotatingText) {
    const texts = JSON.parse(rotatingText.dataset.texts || '[]');
    let currentIndex = 0;
    let currentText = texts[0] || 'AWS';
    let isDeleting = false;
    let charIndex = currentText.length;
    
    // 타이핑 속도 설정
    const typeSpeed = 100; // 타이핑 속도 (ms)
    const deleteSpeed = 50; // 삭제 속도 (ms)
    const pauseTime = 2000; // 완성된 단어 표시 시간 (ms)
    const deletePauseTime = 500; // 삭제 완료 후 대기 시간 (ms)

    function typeEffect() {
      const currentFullText = texts[currentIndex];
      
      if (!isDeleting) {
        // 타이핑 중
        rotatingText.textContent = currentFullText.substring(0, charIndex);
        rotatingText.classList.add('typing');
        rotatingText.classList.remove('deleting');
        charIndex++;
        
        if (charIndex > currentFullText.length) {
          // 타이핑 완료, 잠시 대기 후 삭제 시작
          isDeleting = true;
          rotatingText.classList.remove('typing');
          setTimeout(typeEffect, pauseTime);
          return;
        }
        
        setTimeout(typeEffect, typeSpeed);
      } else {
        // 삭제 중
        rotatingText.textContent = currentFullText.substring(0, charIndex);
        rotatingText.classList.add('deleting');
        rotatingText.classList.remove('typing');
        charIndex--;
        
        if (charIndex < 0) {
          // 삭제 완료, 다음 텍스트로 이동
          isDeleting = false;
          currentIndex = (currentIndex + 1) % texts.length;
          charIndex = 0;
          rotatingText.classList.remove('deleting');
          setTimeout(typeEffect, deletePauseTime);
          return;
        }
        
        setTimeout(typeEffect, deleteSpeed);
      }
    }
    
    // 초기 설정 후 효과 시작
    rotatingText.textContent = currentText;
    
    // 2초 후 타이핑 효과 시작
    setTimeout(() => {
      if (texts.length > 1) {
        isDeleting = true;
        charIndex = currentText.length;
        typeEffect();
      }
    }, 2000);
  }
</script> 