---
import FormattedDate from './FormattedDate.astro'

interface Props {
  title: string
  posts: any[]
  fill?: boolean
}

const { title, posts, fill = true } = Astro.props
---

<section class="featured-post-column">
  <h2 class={`section-title ${fill ? 'filled' : 'outlined'}`}>
    {title}
  </h2>
  
  <div class="posts-grid">
    {posts.map((post) => (
      <article class="post-card">
        <a href={`/post/${post.slug}`} class="post-link">
          <div class="post-header">
            <h3 class="post-title">{post.data.title}</h3>
            <div class="post-meta">
              <FormattedDate date={post.data.pubDate} />
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="post-tags">
                  {post.data.tags.slice(0, 2).map((tag) => (
                    <span class="tag">#{tag}</span>
                  ))}
                </div>
              )}
            </div>
          </div>
          <div class="post-content">
            <p class="post-description">{post.data.description}</p>
            {post.data.category && (
              <span class="post-category">{post.data.category}</span>
            )}
          </div>
        </a>
      </article>
    ))}
  </div>
</section>

<style>
  .featured-post-column {
    display: flex;
    flex-direction: column;
    width: 100%;
    margin-bottom: 60px;
  }

  .section-title {
    font-size: 20px;
    width: fit-content;
    padding: 10px;
    margin-bottom: 25px;
    border: 1px solid;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .section-title.filled {
    background-color: var(--color-text);
    color: var(--color-bg);
    border-color: var(--color-text);
  }

  .section-title.outlined {
    background-color: var(--color-bg);
    color: var(--color-text);
    border-color: var(--color-text);
  }

  .posts-grid {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .post-card {
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    padding: 24px;
    transition: all 0.2s ease;
    background: var(--color-bg);
  }

  .post-card:hover {
    border-color: var(--color-text);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }

  .post-link {
    text-decoration: none;
    color: inherit;
    display: block;
  }

  .post-header {
    margin-bottom: 12px;
  }

  .post-title {
    font-size: 18px;
    font-weight: 600;
    margin: 0 0 8px 0;
    line-height: 1.3;
  }

  .post-meta {
    display: flex;
    align-items: center;
    gap: 12px;
    font-size: 14px;
    color: rgba(0, 0, 0, 0.6);
  }

  .post-tags {
    display: flex;
    gap: 6px;
  }

  .tag {
    font-size: 12px;
    color: var(--color-primary, #4f46e5);
  }

  .post-content {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    gap: 16px;
  }

  .post-description {
    margin: 0;
    color: rgba(0, 0, 0, 0.7);
    line-height: 1.5;
    flex: 1;
  }

  .post-category {
    font-size: 12px;
    padding: 4px 8px;
    background: rgba(0, 0, 0, 0.1);
    border-radius: 12px;
    white-space: nowrap;
  }

  @media (max-width: 768px) {
    .section-title {
      font-size: 17px;
      padding: 8px 10px;
    }

    .post-card {
      padding: 20px;
    }

    .post-title {
      font-size: 16px;
    }

    .post-content {
      flex-direction: column;
      align-items: flex-start;
      gap: 8px;
    }
  }

  :global(.dark) .post-card {
    border-color: rgba(255, 255, 255, 0.1);
  }

  :global(.dark) .post-card:hover {
    border-color: var(--color-text);
  }

  :global(.dark) .post-meta {
    color: rgba(255, 255, 255, 0.6);
  }

  :global(.dark) .post-description {
    color: rgba(255, 255, 255, 0.7);
  }

  :global(.dark) .post-category {
    background: rgba(255, 255, 255, 0.1);
  }
</style> 